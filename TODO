= TODO

== Bugs
    === Text garbled in /caps/tan-plaid-with-blue-accent

    === Pagination and non-contiguous display-order values in the "items" SDB domain
        Since merch is stored in the same domain as caps, pagination based on string sorting of
        :display-order values breaks because displaying only /caps or /merch will result in
        non-contiguous and non-zero-based display-order values.

        limit query clauses still work because SimpleDB will do the counting, but
        if we start at begin index "1", we might still get the first merch item
        in the collection since the first merch display-order might be "0024".

        SimpleDB's shortcomings are becoming apparent.

        ==== Solutions
            * move each item-type into its own domain
                - pros: pagination within item types works easily
                - cons: breaks all-item pagination/ordering without some further mechanism
                        requires reworking of data-access code
            * maintain general :display-order ordering within "items" and also :item-type specific
                display orders which are zero-based and contiguous by subtype
                - pros: can sort based on aggregate or subsets
                - cons: an additional level of field-setting when display orders are changed
                        unlikely to happen often and should have negligible overhead

== Enhancements
    === Missing features
        - Social media links in blog entries
    === General improvements
        - Move page design images to S3.
        - Add more CSS background images to sprites.png: arrow_left, arrow_right, etc
        - Minify JS and CSS
        - Use Sass for CSS
        - Use feedburner?
        - Add superfeedr hub link to RSS feeds
        - Pagination. Infinite scroll, with standard paging for fallback.
        - Implement Schema.org microdata: http://schema.org/docs/gs.html
        - Implement Open Graph protocol: http://ogp.me/
        - Meta title and description? https://developers.google.com/+/plugins/+1button/#plus-snippet
        - Watch: http://support.google.com/webmasters/bin/answer.py?hl=en&answer=35624
        - Google Sitemap: http://support.google.com/webmasters/bin/answer.py?hl=en&answer=183668
        - Try these for nav links, etc:
            text-shadow: white 0.1em 0.1em 0.2em;
            text-shadow: 2pxpx 2px 2px rgba(255, 255, 255, 1);
        - Admin interface
        - We define records in data.clj but don't always use them, often just creating a map
        - Implement encrypted PayPal buttons to avoid users tampering with prices, etc.
          https://cms.paypal.com/us/cgi-bin/?cmd=_render-content&content_ID=developer/e_howto_html_encryptedwebpayments#id08A3I0P017Q
          Current version of the site uses non-encrypted buttons anyway

    === Admin backend
        - Add a history tracking entity. When a cap attribute is changed, store a
          diff into a History domain; something like
          {:type cap :changed-field "price" :old-value "25" :date-changed "2011-02-01"}.
          The same could apply to other items as well.
        - If/when an item is renamed, it cannot be renamed to a name that a different
          item has owned in the past so 301 redirects converge on the unique items

